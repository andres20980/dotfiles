# 🚀 GitOps Master Setup - Configuration File
# ================================================
# Este archivo permite personalizar la instalación sin modificar install.sh
# Exporta las variables necesarias antes de ejecutar: source config.env && ./install.sh

# =============================================================================
# CONFIGURACIÓN DEL CLUSTER
# =============================================================================

# Nombre del cluster kind
# "gitops-local" indica claramente que es un cluster local para GitOps
# (no producción, ideal para desarrollo y aprendizaje)
CLUSTER_NAME="${CLUSTER_NAME:-gitops-local}"

# Namespace donde se despliega Gitea
GITEA_NAMESPACE="${GITEA_NAMESPACE:-gitea}"

# =============================================================================
# PUERTOS EXPUESTOS (NodePort)
# =============================================================================

# Puerto de ArgoCD UI
ARGOCD_PORT="${ARGOCD_PORT:-30080}"

# Puerto de Gitea (web)
GITEA_PORT="${GITEA_PORT:-30083}"

# Puerto de Gitea SSH
GITEA_SSH_PORT="${GITEA_SSH_PORT:-30022}"

# Puerto del Kubernetes Dashboard
DASHBOARD_PORT="${DASHBOARD_PORT:-30085}"

# Puerto de Argo Rollouts Dashboard
ROLLOUTS_PORT="${ROLLOUTS_PORT:-30084}"

# Puerto de Prometheus
PROMETHEUS_PORT="${PROMETHEUS_PORT:-30092}"

# Puerto de Grafana
GRAFANA_PORT="${GRAFANA_PORT:-30093}"

# Puerto de Kargo
KARGO_PORT="${KARGO_PORT:-30094}"

# Puerto del Registry local
REGISTRY_PORT="${REGISTRY_PORT:-30500}"

# Puerto de Demo API (si está habilitada)
DEMO_API_PORT="${DEMO_API_PORT:-30070}"

# =============================================================================
# FEATURE FLAGS
# =============================================================================

# Habilitar aplicaciones personalizadas (demo-api, etc.)
# false = Solo infraestructura GitOps, sin apps de ejemplo
ENABLE_CUSTOM_APPS="${ENABLE_CUSTOM_APPS:-false}"

# Habilitar stack de monitoreo (Prometheus + Grafana)
ENABLE_MONITORING="${ENABLE_MONITORING:-true}"

# Habilitar Kargo (promoción de releases avanzada)
ENABLE_KARGO="${ENABLE_KARGO:-true}"

# Habilitar Argo Rollouts (despliegues progresivos)
ENABLE_ROLLOUTS="${ENABLE_ROLLOUTS:-true}"

# Habilitar Kubernetes Dashboard
ENABLE_DASHBOARD="${ENABLE_DASHBOARD:-true}"

# =============================================================================
# TIMEOUTS Y LÍMITES
# =============================================================================

# Timeout general de instalación (segundos)
INSTALL_TIMEOUT="${INSTALL_TIMEOUT:-1800}"

# Timeout para deployments individuales (segundos)
DEPLOYMENT_TIMEOUT="${DEPLOYMENT_TIMEOUT:-300}"

# Timeout para esperas de API (segundos)
API_WAIT_TIMEOUT="${API_WAIT_TIMEOUT:-180}"

# Máximo de reintentos para operaciones de red
MAX_RETRIES="${MAX_RETRIES:-3}"

# =============================================================================
# REQUISITOS DE RECURSOS
# =============================================================================

# Memoria mínima recomendada (GB)
MIN_MEMORY_GB="${MIN_MEMORY_GB:-4}"

# Espacio en disco mínimo recomendado (GB)
MIN_DISK_GB="${MIN_DISK_GB:-10}"

# =============================================================================
# COMPORTAMIENTO Y DEBUGGING
# =============================================================================

# Modo verbose (más logs detallados)
VERBOSE_LOGGING="${VERBOSE_LOGGING:-false}"

# Modo debug (traza completa de ejecución)
DEBUG_MODE="${DEBUG_MODE:-false}"

# Saltar verificación de recursos del sistema
SKIP_SYSTEM_CHECK="${SKIP_SYSTEM_CHECK:-false}"

# Preservar cluster en caso de error (útil para debugging)
SKIP_CLEANUP_ON_ERROR="${SKIP_CLEANUP_ON_ERROR:-false}"

# Capturar estado del cluster automáticamente en errores
CAPTURE_STATE_ON_ERROR="${CAPTURE_STATE_ON_ERROR:-true}"

# Ejecutar smoke tests automáticos al finalizar
RUN_SMOKE_TESTS="${RUN_SMOKE_TESTS:-true}"

# =============================================================================
# SNAPSHOTS Y BACKUPS
# =============================================================================

# Directorio donde guardar snapshots del cluster
SNAPSHOT_DIR="${SNAPSHOT_DIR:-$HOME/.gitops-snapshots}"

# Crear snapshot automático antes de cambios importantes
AUTO_SNAPSHOT="${AUTO_SNAPSHOT:-false}"

# =============================================================================
# RUTAS Y DIRECTORIOS
# =============================================================================

# Directorio base donde se clonan los repositorios GitOps
GITOPS_BASE_DIR="${GITOPS_BASE_DIR:-$HOME/gitops-repos}"

# Directorio donde guardar métricas de instalación
METRICS_DIR="${METRICS_DIR:-/tmp/gitops-metrics}"

# Directorio para debug logs
DEBUG_LOG_DIR="${DEBUG_LOG_DIR:-/tmp/gitops-debug}"

# =============================================================================
# VERSIONES DE COMPONENTES
# =============================================================================
# Las versiones se actualizan automáticamente desde GitHub al ejecutar install.sh
# Puedes forzar versiones específicas modificando estos valores

# ArgoCD Stack
ARGOCD_VERSION=v3.2.0-rc3
ARGO_ROLLOUTS_VERSION=v1.8.3
ARGO_WORKFLOWS_VERSION=v3.7.2
ARGO_EVENTS_VERSION=v1.9.7
ARGO_IMAGE_UPDATER_VERSION=v0.17.0

# Seguridad
KUBESEAL_VERSION=v0.32.2

# Release Management
KARGO_VERSION=v1.8.4-rc.4

# Observabilidad
PROMETHEUS_VERSION=v3.7.0-rc.0
GRAFANA_VERSION=v12.2.0
K8S_DASHBOARD_VERSION=web/v1.7.0

# Infraestructura
GITEA_VERSION=v1.25.0-rc0
KIND_VERSION=v0.30.0
REDIS_VERSION="${REDIS_VERSION:-7.4-alpine}"
REGISTRY_VERSION="${REGISTRY_VERSION:-2}"

# Versión de Sealed Secrets controller (legacy, usar KUBESEAL_VERSION)
SEALED_SECRETS_VERSION="${SEALED_SECRETS_VERSION:-0.27.1}"

# =============================================================================
# CREDENCIALES (usar con cuidado)
# =============================================================================

# Password de Gitea (si no se especifica, se genera automáticamente)
# GITEA_ADMIN_PASSWORD=""

# Password de Grafana admin (si no se especifica, usa 'admin')
# GRAFANA_ADMIN_PASSWORD=""

# =============================================================================
# AVANZADO
# =============================================================================

# Deshabilitar colores en la salida (útil para CI/CD)
NO_COLOR="${NO_COLOR:-false}"

# Ejecutar en modo CI (sin interacciones)
CI_MODE="${CI_MODE:-false}"

# Paralelizar instalación de herramientas cuando sea posible
PARALLEL_INSTALL="${PARALLEL_INSTALL:-true}"

# =============================================================================
# NOTAS DE USO
# =============================================================================

# Para usar este archivo:
# 1. Copia este archivo y personalízalo según tus necesidades
# 2. Exporta las variables: source config.env
# 3. Ejecuta el instalador: ./install.sh
#
# O en una sola línea:
# source config.env && ./install.sh --unattended
#
# Para modo debug completo:
# export DEBUG_MODE=true VERBOSE_LOGGING=true && ./install.sh --stage cluster
