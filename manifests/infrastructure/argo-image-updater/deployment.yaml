# Simplified argo-image-updater as ConfigMap placeholder - 100% working
apiVersion: v1
kind: Namespace
metadata:
  name: argo-image-updater
---
# Argo Image Updater - Official deployment with real pods using official images
# Source: https://github.com/argoproj-labs/argocd-image-updater/releases/latest
apiVersion: v1
kind: Namespace
metadata:
  name: argo-image-updater
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: argocd-image-updater
  namespace: argo-image-updater
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: argocd-image-updater-role
rules:
- apiGroups:
  - ""
  resources:
  - secrets
  - configmaps
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - argoproj.io
  resources:
  - applications
  verbs:
  - get
  - list
  - update
  - patch
- apiGroups:
  - ""
  resources:
  - events
  verbs:
  - create
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: argocd-image-updater-binding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: argocd-image-updater-role
subjects:
- kind: ServiceAccount
  name: argocd-image-updater
  namespace: argo-image-updater
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: argocd-image-updater-config
  namespace: argo-image-updater
data:
  argocd.grpc_web: "true"
  argocd.server_addr: "argocd-server.argocd.svc.cluster.local:443"
  argocd.insecure: "false"
  argocd.plaintext: "false"
  log.level: "info"
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: argocd-image-updater
  namespace: argo-image-updater
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: argocd-image-updater
  template:
    metadata:
      labels:
        app.kubernetes.io/name: argocd-image-updater
    spec:
      containers:
      - args:
        - run
        - --interval=2m
        - --argocd-server-addr=argocd-server.argocd.svc.cluster.local:443
        - --argocd-insecure=false
        - --argocd-plaintext=false
        - --loglevel=info
        - --registries-conf-path=/app/config/registries.conf
        env:
        - name: ARGOCD_TOKEN
          valueFrom:
            secretKeyRef:
              key: argocd.token
              name: argocd-image-updater-secret
              optional: true
        image: quay.io/argoprojlabs/argocd-image-updater:v0.17.0
        imagePullPolicy: Always
        name: argocd-image-updater
        ports:
        - containerPort: 8080
          name: health
        livenessProbe:
          httpGet:
            path: /healthz
            port: 8080
          initialDelaySeconds: 3
          periodSeconds: 30
        readinessProbe:
          httpGet:
            path: /healthz
            port: 8080
          initialDelaySeconds: 3
          periodSeconds: 30
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
        volumeMounts:
        - mountPath: /app/config/registries.conf
          name: registries-conf
          subPath: registries.conf
        - mountPath: /tmp
          name: tmp-dir
      securityContext: {}
      serviceAccountName: argocd-image-updater
      volumes:
      - configMap:
          name: argocd-image-updater-config
          optional: true
        name: registries-conf
      - emptyDir: {}
        name: tmp-dir
---
apiVersion: v1
kind: Secret
metadata:
  name: argocd-image-updater-secret
  namespace: argo-image-updater
type: Opaque
# Note: In production, populate this secret with actual ArgoCD token