apiVersion: v1
kind: ConfigMap
metadata:
  name: ci-scripts
  namespace: argo-workflows
data:
  git-clone.sh: |
    #!/bin/sh
    set -e
    
    # Limpiar branch name (remover refs/heads/ si existe)
    CLEAN_BRANCH=$(echo "$BRANCH" | sed 's|refs/heads/||')
    
    echo "üîç Clonando repositorio $REPO_URL (branch $CLEAN_BRANCH)"
    git clone --depth=1 --branch="$CLEAN_BRANCH" "$REPO_URL" /workspace
    cd /workspace
    
    if [ -n "$COMMIT_SHA" ] && [ "$COMMIT_SHA" != "unknown" ] && [ "$COMMIT_SHA" != "HEAD" ]; then
      echo "üìå Checking out commit: $COMMIT_SHA"
      git fetch --depth=1 origin "$COMMIT_SHA"
      git checkout "$COMMIT_SHA"
    fi
    
    echo "‚úÖ Repository ready"
    ls -la

  docker-build-push.sh: |
    #!/bin/sh
    set -e
    echo "üê≥ Building and pushing Docker image..."
    /kaniko/executor \
      --dockerfile=/workspace/Dockerfile \
      --context=/workspace \
      --destination="$IMAGE_REGISTRY/$IMAGE_NAME:$COMMIT_SHA" \
      --destination="$IMAGE_REGISTRY/$IMAGE_NAME:latest" \
      --insecure \
      --skip-tls-verify \
      --cache=true \
      --cache-ttl=24h
    echo "‚úÖ Image pushed: $IMAGE_REGISTRY/$IMAGE_NAME:$COMMIT_SHA"

  update-manifests.sh: |
    #!/bin/sh
    set -e
    echo "üìù Updating Kubernetes manifests..."
    
    # Clone gitops repo
    cd /tmp
    git clone http://gitops:n5Sn4efguDMnUgIx@gitea.gitea.svc.cluster.local:3000/gitops/custom-apps.git
    cd custom-apps/demo-app
    
    # Update image tag in kustomization.yaml
    sed -i "s|newTag:.*|newTag: $COMMIT_SHA|g" kustomization.yaml
    
    # Commit and push
    git config user.name "Argo Workflows"
    git config user.email "argo@gitops.local"
    git add .
    git commit -m "chore: update demo-app image to $COMMIT_SHA"
    git push
    
    echo "‚úÖ Manifests updated and pushed"
